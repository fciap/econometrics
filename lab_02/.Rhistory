install.packages('rmarkdown')
install.packages("knitr") # взаимодействие R-LaTeX и R-markdown
source('C:/Users/User/Downloads/install_all.R', echo=TRUE)
install.packages("tidyverse") # коллекция пакетов от Hadley Wickham
install.packages("tidyverse") # коллекция пакетов от Hadley Wickham
install.packages("knitr") # взаимодействие R-LaTeX и R-markdown
install.packages("rmarkdown") # взаимодействие R-markdown
install.packages("xtable") # перевод таблиц в LaTeX
install.packages("texreg") # сравнение моделей в LaTeX
install.packages("pander") # перевод таблиц в markdown
install.packages("memisc") # перевод таблиц в markdown
install.packages("lmtest") # тесты в линейных моделях
install.packages("sandwich") # оценки ковариационной матрицы робастные к гетероскедастичности
install.packages("erer") # подборка пакетов для эмпирических исследований
install.packages("AUC") # подсчёт показателя AUC
install.packages("mfx") # не используется в курсе, хорош для предельных эффектов в logit/probit
install.packages("GGally") # матрица диаграмм рассеяния
install.packages("lattice") # конкурент ggplot2
install.packages("vcd") # мозаичный график
install.packages("hexbin") # график из шестиугольников
install.packages("sjPlot") # визуализация результатов МНК
install.packages("reshape2") # длинные <-> широкие таблицы
install.packages("psych") # описательные статистики
install.packages("glmnet") # LASSO
install.packages("HSAUR")
install.packages("sgof")
install.packages("car")
install.packages("spikeslab") # байесовская регрессия пик-плато
install.packages("quantreg") # квантильная регрессия
install.packages("MCMCpack") # набор моделей с байесовским подходом
install.packages("devtools") # разработка пакетов
install.packages("caret") # подбор параметров с помощью кросс-валидации
install.packages("AER")
install.packages("ivpack") # интсрументальные переменные
install.packages("zoo") # нерегулярные временные ряды
install.packages("xts") # еще ряды
install.packages("forecast") # ARMA, экспоненциальное сглаживание
install.packages("rugarch") # не используется в курсе, хорош для GARCH
install.packages("quantmod") # загрузка с finance.google.com
install.packages("Quandl") # загрузка с Quandl
install.packages("sophisthse") # read data from sophist.hse.ru
# non-CRAN packages:
devtools::install_github("bdemeshev/rlms") # чтение и авточистка данных RLMS
devtools::install_github('hughjonesd/huxtable') # красивые таблички для latex/markdown/html
# дополнение к quantmod для загрузки данных с finam.ru
install.packages("rusquant", repos = "http://r-forge.r-project.org", type = "source")
library('dplyr')
# загружаем пакеты
library("memisc")  # две и более регрессий в одной табличке
library("lmtest")  # тестирование гипотез в линейных моделях
library("sjPlot")  # графики
library("sgof")
library("foreign")  # загрузка данных в разных форматах
library("car")
library("hexbin")  # графики
library("tidyverse") # вместо ggplot2 (графики) и dplyr (манипуляции с данными)
version
# генерируем случайные величины Z_1, ...., Z_100 ~ N(5, 9)
z <- rnorm(100, mean = 5, sd = 3)
z[56]  # z номер 56
z[2:9]  # вектор из z_2, ..., z_9
qplot(z)  # гистограмма
x <- seq(-10, 15, by = 0.5)  # задаем последовательности чисел от -10 до 15 с шагом 0.5
y <- dnorm(x, mean = 5, sd = 3)  # считаем в этих точках значение плотности для N(5,3^2)
qplot(x, y)  # график точками
qplot(x, y, geom = "line")  # график линией
# Найдем P(Z<3) P(Z<3)=F(3). Данная вероятность --- это функция распределения
pnorm(3, mean = 5, sd = 3)
library("memisc") # две и более регрессий в одной табличке
library("dplyr") # манипуляции с данными
library("psych") # описательные статистики
library("lmtest") # тестирование гипотез в линейных моделях
library("sjPlot") # графики
library("sgof")
library("ggplot2") # графики
library("foreign") # загрузка данных в разных форматах
library("car")
library("hexbin") # графики
library("rlms") # загрузка данных в формате rlms (spss)
install.packages("rlms")
qplot(z)  # гистограмма
qplot(x, y)  # график точками
# Найдем P(Z<3) P(Z<3)=F(3). Данная вероятность --- это функция распределения
pnorm(3, mean = 5, sd = 3)
# Найдем P(Z \in [4;9]) P(Z<9)-P(Z<4). Данная вероятность --- разность функций
# распределения
pnorm(9, mean = 5, sd = 3) - pnorm(4, mean = 5, sd = 3)
# Найдем а, при котором P(Z<a)=0.7.
qnorm(0.7, mean = 5, sd = 3)
h <- swiss  # набор данных по кантонам Швейцарии (встроенный в R)
View(h)
glimpse(h)  # бросим взгляд на данные
help(swiss)
# оценим модель множественной регрессии
model <- lm(data = h, Fertility ~ Catholic + Agriculture + Examination)
# посмотрим результаты оценивания
summary(model)
# отдельно табличка с тестами
coeftest(model)
confint(model)  # доверительные интервалы для коэффициентов
sjp.lm(model)  # графическое представление интервалов
library("sjPlot")  # графики
sjp.lm(model)  # графическое представление интервалов
install.packages("sjPlot")
sjp.lm(model)  # графическое представление интервалов
sjp
library("memisc")  # две и более регрессий в одной табличке
library("psych")  # описательные статистики
library("lmtest")  # тестирование гипотез в линейных моделях
library("sjPlot")  # графики
library("sgof")
library("foreign")  # загрузка данных в разных форматах
library("car")
library("hexbin")  # графики
library("tidyverse") # вместо ggplot2 (графики) и dplyr (манипуляции с данными)
library("rlms")  # загрузка данных в формате rlms (spss)
install.packages("rlms")
library("memisc")  # две и более регрессий в одной табличке
library("psych")  # описательные статистики
library("lmtest")  # тестирование гипотез в линейных моделях
library("sjPlot")  # графики
library("sgof")
library("foreign")  # загрузка данных в разных форматах
library("car")
library("hexbin")  # графики
library("tidyverse") # вместо ggplot2 (графики) и dplyr (манипуляции с данными)
library("rlms")  # загрузка данных в формате rlms (spss)
sjp.lm(model)  # графическое представление интервалов
sjp.дm(model)  # графическое представление интервалов
sjp.lm(model)  # графическое представление интервалов
# проверка гипотезы b_Cath=b_Agri построение вспомогательной модели
model_aux <- lm(data = h, Fertility ~ Catholic + I(Catholic + Agriculture) + Examination)
summary(model_aux)
# проверка гипотезы без построения вспомогательной модели
linearHypothesis(model, "Catholic-Agriculture=0")
# масштабируем каждую переменную (вычитаем среднее, делим на стандартную ошибку)
h_st <- mutate_each(h, "scale")
glimpse(h_st)  # смотрим на новый набор данных
# оцениваем модель по стандартизированным данным
model_st <- lm(data = h_st, Fertility ~ Catholic + Agriculture + Examination)
summary(model_st)  # отчет о новой модели
# графическое представление стандартизованных коэффициентов
sjp.lm(model_st)
# матрица в 100 строк, слепленная из вектора в котором 4100 элементов
D <- matrix(nrow = 100, rnorm(100 * 41, mean = 0, sd = 1))
View(D)
df <- data.frame(D)  # переводим матрицу в табличку данных
glimpse(df)
# пытаемся определить зависимость X1 от остальных переменных
model_pusto <- lm(data = df, X1 ~ .)
summary(model_pusto)
# сравниваем несколько моделей
model2 <- lm(data = h, Fertility ~ Catholic + Agriculture)
compar_12 <- mtable(model, model2)
compar_12
setwd("~/R/lab_02")
# сохранение результатов работы
stuff <- list(data = h, model = model2)  # список ценных объектов
View(stuff)
saveRDS(file = "mydata.RDS", stuff)  # сохраняем всё ценное в файл
mylist <- readRDS("mydata.RDS")  # читаем из файла что там есть
View(mylist)
View(mylist[["data"]])
summary(mylist$model)
# первая (сознательно неудачная) попытка чтения файла
t <- read.csv("flats_moscow.txt")
